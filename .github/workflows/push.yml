name: push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push frontend
        id: docker_build_2
        uses: docker/build-push-action@v2
        with:
          context: ./
          platforms: linux/arm/v7
          file: ./frontendDockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/vid-chat:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache  

      - name: Build and push backend
        id: docker_build_1
        uses: docker/build-push-action@v2
        with:
          context: ./
          platforms: linux/arm/v7
          file: ./backendDockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/signaling-server:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # - name: Install OpenVPN
      #   run: sudo apt install -y openvpn openvpn-systemd-resolved
      # - name: Connect to VPN
      #   uses: "kota65535/github-openvpn-connect-action@v1"
      #   with:
      #     config_file: ./github/workflows/client.ovpn
      #     username: ${{ secrets.OVPN_USERNAME }}
      #     password: ${{ secrets.OVPN_PASSWORD }}
      #     client_key: ${{ secrets.OVPN_CLIENT_KEY }}
      #     tls_auth_key: ${{ secrets.OVPN_TLS_AUTH_KEY }}
      # - name: executing remote ssh commands using password
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       whoami
      #       ls -al
        
